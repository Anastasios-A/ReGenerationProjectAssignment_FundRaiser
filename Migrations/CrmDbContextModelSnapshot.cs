// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReGenerationProjectAssignment_FundRaiser.DbContexts;

#nullable disable

namespace ReGenerationProjectAssignment_FundRaiser.Migrations
{
    [DbContext(typeof(CrmDbContext))]
    partial class CrmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Funding_Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"));

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageRewared")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackageValue")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("Project_TrackerTrackerId")
                        .HasColumnType("int");

                    b.HasKey("PackageId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("Project_TrackerTrackerId");

                    b.ToTable("Funding_Packages");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FundingGoal")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status_UpdateStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VideoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Status_UpdateStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Project_Tracker", b =>
                {
                    b.Property<int>("TrackerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrackerId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("TrackerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Project_Tracker");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Status_Update", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("Project_TrackerTrackerId")
                        .HasColumnType("int");

                    b.HasKey("StatusId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("Project_TrackerTrackerId");

                    b.ToTable("Status_Updates");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Transaction_Tracker", b =>
                {
                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("FundingPackagePackageId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("FundingPackagePackageId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction_Tracker");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Funding_Package", b =>
                {
                    b.HasOne("ReGenerationProjectAssignment_FundRaiser.Models.Project", "Project")
                        .WithMany("Funding_Packages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReGenerationProjectAssignment_FundRaiser.Models.Project_Tracker", null)
                        .WithMany("Funding_Packages")
                        .HasForeignKey("Project_TrackerTrackerId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Project", b =>
                {
                    b.HasOne("ReGenerationProjectAssignment_FundRaiser.Models.Category", "Category")
                        .WithMany("ProjectCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReGenerationProjectAssignment_FundRaiser.Models.Status_Update", null)
                        .WithMany("ProjectCategories")
                        .HasForeignKey("Status_UpdateStatusId");

                    b.HasOne("ReGenerationProjectAssignment_FundRaiser.Models.User", "User")
                        .WithMany("ProjectCategories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Project_Tracker", b =>
                {
                    b.HasOne("ReGenerationProjectAssignment_FundRaiser.Models.Project", null)
                        .WithMany("Project_Trackers")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Status_Update", b =>
                {
                    b.HasOne("ReGenerationProjectAssignment_FundRaiser.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReGenerationProjectAssignment_FundRaiser.Models.Project_Tracker", null)
                        .WithMany("Status_Updates")
                        .HasForeignKey("Project_TrackerTrackerId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Transaction_Tracker", b =>
                {
                    b.HasOne("ReGenerationProjectAssignment_FundRaiser.Models.Funding_Package", "FundingPackage")
                        .WithMany("Transaction_Trackers")
                        .HasForeignKey("FundingPackagePackageId");

                    b.HasOne("ReGenerationProjectAssignment_FundRaiser.Models.Project", "Project")
                        .WithMany("Transaction_Trackers")
                        .HasForeignKey("ProjectId");

                    b.HasOne("ReGenerationProjectAssignment_FundRaiser.Models.User", "User")
                        .WithMany("Transaction_Trackers")
                        .HasForeignKey("UserId");

                    b.Navigation("FundingPackage");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Category", b =>
                {
                    b.Navigation("ProjectCategories");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Funding_Package", b =>
                {
                    b.Navigation("Transaction_Trackers");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Project", b =>
                {
                    b.Navigation("Funding_Packages");

                    b.Navigation("Project_Trackers");

                    b.Navigation("Transaction_Trackers");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Project_Tracker", b =>
                {
                    b.Navigation("Funding_Packages");

                    b.Navigation("Status_Updates");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.Status_Update", b =>
                {
                    b.Navigation("ProjectCategories");
                });

            modelBuilder.Entity("ReGenerationProjectAssignment_FundRaiser.Models.User", b =>
                {
                    b.Navigation("ProjectCategories");

                    b.Navigation("Transaction_Trackers");
                });
#pragma warning restore 612, 618
        }
    }
}
